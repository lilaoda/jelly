apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion  rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation deps.junit
    api deps.support.v7
    api deps.support.design
    api deps.dagger.dagger
    api deps.dagger.android
    api deps.dagger.android_support

    api deps.constraint_layout
    api deps.butterknife.butterknife
    //rxjava2
    api deps.rxjava.rxjava
    api deps.rxjava.rxandroid
    //rxife
    api deps.rxlifecycle2.rxlifecycle
    api deps.rxlifecycle2.android
    api deps.rxlifecycle2.components
    //retrofit
    api deps.retrofit.retrofit
    api deps.retrofit.rxjava2_adapter
    api deps.retrofit.gson
    api deps.retrofit.okhttp_logging_interceptor
    //glide
    api deps.glide.glide
    annotationProcessor deps.glide.compiler
    //leakcanary
    debugImplementation deps.leakcanary.android_debug
    releaseImplementation deps.leakcanary.android_release
    //权限管理
    api deps.rxpermissions
    api deps.logger
    api deps.multiImageSelector
    api deps.rxpermissions
    api deps.luban
    api deps.filedownloader
    api deps.smartRefreshLayout
    api deps.baseRecyclerViewAdapterHelper
    api deps.lifecycle_extensions
}
