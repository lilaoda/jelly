apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion  rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    defaultConfig {
        ndk {
            //设置支持的SO库架构
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$androidxVersion"
    implementation "com.google.android.material:material:$androidxVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
//    # required, enough for most devices.
    api 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    api 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'

////    # Other ABIs: optional
//    api 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8'
//    api 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8'
    api 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'
//    api 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'
//
////    # ExoPlayer as IMediaPlayer: optional, experimental
//    api 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.8'
}
